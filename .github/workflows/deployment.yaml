name: deployment mahesh12345

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write   # needed for ghcr

jobs:
  build-and-push:
    runs-on: ubuntu-latest       # use ubuntu runner (or self-hosted with Docker)
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/myapp
      IMAGE_TAG: ${{ github.sha }}   # unique tag by commit, you can also use "latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-arch, optional)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      # If you want Docker Hub instead, replace above with:
      # registry: docker.io
      # username: ${{ secrets.DOCKERHUB_USERNAME }}
      # password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_NAME }}:latest
          file: ./Dockerfile

      - name: Set image variable for next job
        run: echo "IMAGE=${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}" >> $GITHUB_ENV

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Update k8s manifest image
        run: |
          # Update the image in the deployment manifest to the image built above
          IMAGE="${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.IMAGE_TAG || github.sha }}"
          # If using the earlier $GITHUB_ENV approach we can just use the sha tag:
          IMAGE="${{ env.IMAGE_NAME }}:${{ github.sha }}"
          echo "Using image: $IMAGE"
          # Replace placeholder image in k8s/deployment.yaml (if you left placeholder)
          sed -i "s|ghcr.io/OWNER/myapp:latest|${IMAGE}|g" k8s/deployment.yaml || true

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f apps1/k8s/deployment.yaml
          kubectl apply -f apps1/k8s/service.yaml

      - name: Verify rollout
        run: |
          kubectl rollout status deployment/myapp-deployment --timeout=120s
          kubectl get pods -l app=myapp -o wide
